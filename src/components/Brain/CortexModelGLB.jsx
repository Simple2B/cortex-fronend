/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function CortexModelGLB({ ...props }) {
  const groupCortexModelGLB = useRef()
  const { nodes, materials } = useGLTF('/largeModel.glb')
  return (
    <group ref={groupCortexModelGLB} {...props} dispose={null}>
      <group position={[-0.01, 0, 0]} scale={0.01}>
        <mesh geometry={nodes['mid-Mat'].geometry} material={materials.Mat} />
      </group>
      <group position={[-0.01, 0, 0]} scale={0.01}>
        <mesh geometry={nodes.Occipital_lope.geometry} material={materials.Mat} />
        <mesh geometry={nodes.Temporal_lope.geometry} material={materials.Mat} />
        <mesh geometry={nodes.Parietal_lope.geometry} material={materials.Mat} />
        <mesh geometry={nodes.Frontal_lope.geometry} material={materials.Mat} />
        <mesh geometry={nodes.mid_down.geometry} material={materials.Mat} />
      </group>
      <group position={[0.01, 0, 0]} scale={0.01}>
        <mesh geometry={nodes.Occipital_lope_1.geometry} material={materials.Mat} />
        <mesh geometry={nodes.Temporal_lope_1.geometry} material={materials.Mat} />
        <mesh geometry={nodes.Parietal_lope_1.geometry} material={materials.Mat} />
        <mesh geometry={nodes.Frontal_lope_1.geometry} material={materials.Mat} />
        <mesh geometry={nodes.mid_down_1.geometry} material={materials.Mat} />
      </group>
      <mesh geometry={nodes.Spinal_cord.geometry} material={materials.Mat} scale={0.01} />
      <mesh geometry={nodes.Cerebellum.geometry} material={materials.Mat} scale={0.01} />
    </group>
  )
}

useGLTF.preload('/largeModel.glb')
